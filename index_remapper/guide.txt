
# Syntax
Common syntax:
[0.;][(w1,w2,w3);]Index0,Index1,Index2[,...]

Expression above represents comma separated indices in target frame calculated from indices from source array.

i<num> - index
i<num>w - index width
a[i] - specific index
a[start:end], a[start:end:step] - python-like slices

Indexing starts from 0;

Supported operations +-*/%()

It is possible to set custom fill value. Write it before indices and separate it with semicolon (;). See in common syntax
Specifying target shape is done the same way.

# EXAMPLES

MiniEUSO removing extra indices ([0,0,48,48] -> [48,48])
i2,i3
inverse transformation:
0,0,i0,i1


Cut center pixels from  MiniEuso ([0,0,48,48] -> [16,16])
i2[16:32]-16, i3[16:32]-16

Cut center pixels from  MiniEuso ([0,0,48,48] -> [16,16]). However we want to pad it with zeros conserving shape
(48,48); i2[16:32], i3[16:32]

If two source pixels are trying to write to same target pixel a error occurs.
If target pixel lands outside of array it is neglected
